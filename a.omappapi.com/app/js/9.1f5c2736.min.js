/*! Dtr - Wednesday, September 28th 2022, 16:10:28 UTC */
(self.webpackChunkom_api_js = self.webpackChunkom_api_js || []).push([
    [9], {
        5690: function(t, e, i) {
            "use strict";
            i.r(e), i.d(e, {
                default: function() {
                    return o
                }
            });
            var s = i(5237),
                r = i(7187),
                a = i.n(r),
                n = i(4369);
            class o {
                constructor(t) {
                    this.global = (t, e) => {
                        (0, n.isFunction)(window[t]) && window[t](e)
                    }, this.replaceCustomVars = (t = "") => {
                        let e = t.match(/\{\{(.*?)\}\}/g);
                        return e ? ((0, n.each)(e, ((e, i) => t = this.replace(i, t))), t) : t
                    }, this.replace = (t, e = "") => {
                        let i = t;
                        if (!t.length) return;
                        const r = t.replace("{{", "").replace("}}", "").trim().split("|"),
                            o = void 0 !== r[1] ? r[1] : "",
                            u = void 0 !== r[0] ? this.sanitize(r[0]) : "";
                        if ((0, n.hasQueryArg)(u)) e = e.replace(i, a()(decodeURIComponent((0, n.getQueryArg)(u))));
                        else if (s.Vj.get(u)) e = e.replace(i, a()(s.Vj.get(u)));
                        else if (this.getCustomVariable(u)) e = e.replace(i, a()(this.getCustomVariable(u)));
                        else {
                            if ("" === o) return e = (e = e.replace(i + " ", "")).replace(i, "");
                            e = e.replace(i, a()(o))
                        }
                        return e
                    }, this.getCustomVariable = t => !!this.hasCustomVariable(t) && window[s.g.GLOBAL_OM].custom[t], this.setCustomVariable = (t, e) => {
                        window[s.g.GLOBAL_OM].custom[t] = e
                    }, this.getCustomVariables = () => window[s.g.GLOBAL_OM].custom, this.hasCustomVariable = t => (0, n.hasProp)(window[s.g.GLOBAL_OM].custom, t), this.hasCustomVariables = () => !(0, n.empty)(this.getCustomVariables()), this.deleteCustomVariable = t => delete window[s.g.GLOBAL_OM].custom[t], this.C = t, this.init()
                }
                init() {
                    this.global("OMCustomVariables", this.setCustomVariable), this.global("OptinMonsterCustomVariables", this), (0, n.trigger)(document, "Dtr.init", {
                        Dtr: this,
                        Campaign: this.C
                    })
                }
                sanitize(t) {
                    const e = document.createElement("div");
                    return e.innerHTML = t, e.innerText.trim()
                }
            }
        },
        8674: function(t) {
            t.exports = function(t) {
                return function(e) {
                    return null == t ? void 0 : t[e]
                }
            }
        },
        9464: function(t, e, i) {
            var s = i(8674)({
                "&": "&amp;",
                "<": "&lt;",
                ">": "&gt;",
                '"': "&quot;",
                "'": "&#39;"
            });
            t.exports = s
        },
        7187: function(t, e, i) {
            var s = i(9464),
                r = i(9833),
                a = /[&<>"']/g,
                n = RegExp(a.source);
            t.exports = function(t) {
                return (t = r(t)) && n.test(t) ? t.replace(a, s) : t
            }
        }
    }
]);